{"ast":null,"code":"var _jsxFileName = \"/Users/amanshukla/Desktop/google_keep/google_keep_v1/src/Image.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Image = () => {\n  _s();\n\n  const [image, setImage] = useState();\n\n  const handleChange = event => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    if (file) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Image, \"rw6qng99rwBYv/BMRhLONeRFue4=\");\n\n_c = Image;\nexport default Image;\n\nvar _c;\n\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"sources":["/Users/amanshukla/Desktop/google_keep/google_keep_v1/src/Image.jsx"],"names":["React","useState","Image","image","setImage","handleChange","event","reader","FileReader","file","target","files"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,EAAlC;;AAGA,QAAMI,YAAY,GAAIC,KAAD,IAAU;AAC3B,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,UAAMC,IAAI,GAAIH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAd;;AACA,QAAGF,IAAH,EAAQ,CAEP;AAGJ,GARD;;AASI,sBACI;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,EAGGF,KAAK,iBACP;AAAK,MAAA,GAAG,EAAIA;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA,kBADJ;AAQH,CArBD;;GAAMD,K;;KAAAA,K;AAuBN,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react'\n\n\n\nconst Image = ()  =>{\nconst [image, setImage] = useState()\n\n\nconst handleChange = (event) =>{\n    const reader = new FileReader();\n    const file  = event.target.files[0]\n    if(file){\n\n    }\n    \n   \n}\n    return (\n        <>\n          <input type=\"file\" onChange={handleChange}/>\n\n         { image&&\n         <img src = {image}></img>}\n        </>\n    )\n}\n\nexport default Image\n"]},"metadata":{},"sourceType":"module"}