{"ast":null,"code":"var _jsxFileName = \"/Users/amanshukla/Desktop/google_keep/google_keep_v1/src/CreateNote.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Image from './Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateNote = props => {\n  _s();\n\n  const [expand, setExpand] = useState(false);\n  const [image, setImage] = useState('');\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n    image: \"\"\n  });\n\n  const inputEvent = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(prevData => {\n      return { ...prevData,\n        [name]: value\n      };\n    });\n    console.log(note);\n  };\n\n  const addEvent = () => {\n    props.passNote(note);\n    setNote({\n      title: \"\",\n      content: \"\",\n      image: \"\"\n    });\n  };\n\n  const expandIt = () => {\n    setExpand(true);\n  };\n\n  const btoNormal = () => {\n    setExpand(false);\n  };\n\n  const handleChange = event => {\n    const reader = new FileReader();\n    const file = event.target.files[0];\n\n    if (file) {\n      reader.onloadend = () => {\n        // log to console\n        // logs data:<type>;base64,wL2dvYWwgbW9yZ...\n        setImage(reader.result);\n        setNote(oldData => {\n          return { ...oldData,\n            image: reader.result\n          };\n        });\n        set;\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_note\",\n      onDoubleClick: btoNormal,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [expand && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: note.title,\n          onChange: inputEvent,\n          placeholder: \"Title\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"\",\n          name: \"content\",\n          onClick: expandIt,\n          column: \"\",\n          value: note.content,\n          onChange: inputEvent,\n          placeholder: \"Write a note...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), expand && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: addEvent,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            className: \"plus_sign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateNote, \"Y63ktWgIcoHoZsVCgrVrj0NLsXI=\");\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["/Users/amanshukla/Desktop/google_keep/google_keep_v1/src/CreateNote.jsx"],"names":["React","useState","makeStyles","Button","AddIcon","Image","CreateNote","props","expand","setExpand","image","setImage","note","setNote","title","content","inputEvent","event","name","value","target","prevData","console","log","addEvent","passNote","expandIt","btoNormal","handleChange","reader","FileReader","file","files","onloadend","result","oldData","set","readAsDataURL"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Image from './Image'\n\n\nconst CreateNote = (props) => {\nconst [expand, setExpand] = useState(false)\nconst [image, setImage] = useState('')\nconst [note, setNote] = useState({\n    title:\"\",\n    content:\"\",\n    image:\"\",\n});\n\nconst inputEvent = (event) =>{\n    const {name, value} = event.target;\n\n    setNote((prevData) =>{\n        return {\n            ...prevData,\n            [name]: value\n        }\n    })\n    console.log(note)\n}\n\nconst addEvent = () =>{\n    props.passNote(note);\n    setNote({\n        title:\"\",\n        content:\"\",\n        image:\"\",\n    })\n}\nconst expandIt = () =>{\n    setExpand(true)\n}\nconst btoNormal = () =>{\n    setExpand(false)\n}\n\n\n\nconst handleChange = (event) =>{\n    const reader = new FileReader();\n    const file  = event.target.files[0]\n    if(file){\n        reader.onloadend = () => {\n            // log to console\n            // logs data:<type>;base64,wL2dvYWwgbW9yZ...\n            setImage(reader.result)\n            setNote((oldData) =>{\n                return {...oldData,image:reader.result}\n            })\n            set\n          };\n        reader.readAsDataURL(file)\n    } \n}\n    return (\n       <>\n        <div className =\"main_note\"  onDoubleClick ={btoNormal}>\n        <form>\n       {     expand &&\n            <input type =\"text\" \n            name = \"title\"\n            value ={note.title} \n            onChange ={inputEvent} \n            placeholder=\"Title\" \n            autoComplete = \"off\" />}\n\n            \n            <textarea rows=\"\"\n            name=\"content\"\n            onClick = {expandIt}\n             column = \"\"\n              value ={note.content}\n               onChange ={inputEvent}\n\n                placeholder=\"Write a note...\"/>\n\n            <input type=\"file\" onChange={handleChange}/>\n\n            { image&&\n            <img src = {image} ></img>}\n          {  expand &&\n            <Button onClick = {addEvent}>\n            <AddIcon className =\"plus_sign\" />\n            </Button>}\n\n        </form>\n\n        </div>\n       </>\n    )\n}\n\nexport default CreateNote\n"]},"metadata":{},"sourceType":"module"}